* this file is called BUGLETS, it used to be called BUGS anymore until
  this so-called MacOSX unix clone came around and decided it cannot 
  handle case sensitive file/directory names. Cygwin isn't much better
  (they all depend on a weaker FS, vfat and HFS+ which cannot handle
  such names)

- intel 8.0 - some linkeage problems left with loadobj based
  routines, e.g. vrtm51.so can't  find get_atable

- intel 8.0 - io_nemo doesn't compile

- intel 7.1 also has some remaining problems. Linking needs to
  be done with fortran and the -Vaxlib library

- intel 9.0: how the heck do you use multiple .o's on the link line

- install on machines where IRAF's f77 is in the path before the 
  system version: you will need to
	setenv F77 g77
  or whichever appropriate. the IRAF script will cause various
  fortran-c link schemes to fail.

- gcc3:  when using c++ NEMO's "string" will now collide with the 
         default C++ type 'string'....

	 -DSINGLEPREC does not work for a number of programs due to
	bad prototyping of the "proc" functions. This will be fixed,
	and is also needed in preparation for NEMO V4 when a C++ compiler
	will be the default compiler.

- install on darwin:
	- FORLIBS get crt1.o or something, and this is not needed,
	and will cause linkers to fail. It needs to be removed
	from the $NEMOLIB/makedefs and NEMORC.local - if  present -

- install on solaris:
	awk cannot handle too many in src/scripts/need/
	exception.c does not compile for gcc3 as well as solaris' cc
	- FORLIBS needs the 
	  -R /opt/SUNWspro/lib -L/opt/SUNWspro/lib -lF77 -lM77 -lV77 -lsunmath 
	  type solution for pgplot, and if so,
	- FORLIBS need to be added to YAPPLIB

* LFS seems to work, but keep an eye open on e.g.
	http://freshmeat.net/articles/view/709/
  and 
	http://www.suse.de/~aj/linux_lfs.html
  for an outline of the problems

- large objects (> 2GB or > 4GB), specifically snapshots, can be limited
  in size of they use private calls to allocate() without making sure the
  argument has been casted to (size_t)

- runbody1/2 : input files can have velocities changed by 2t/w ??
	also needs nbody= when really not needed?

- filestruct:
  The following snippet of code stores only  "1" for the value of pi,
  3 times. ZENO actually does it correct.
    put_set(ostr,"par");
    pi = 1;
    put_data(ostr, "pi", DoubleType, &pi, 0);
    pi = 2;
    put_data(ostr, "pi", DoubleType, &pi, 0);
    pi = 3;
    put_data(ostr, "pi", DoubleType, &pi, 0);
    put_tes(ostr,"par");
  ZENO also reads correctly, and if no more 'same name' items are present,
  it will repeat the last one read. But the ZENO reader will serially
  read (and remember?)

- filestruct history: long character strings are broken in silly places,
	and don't port very well between tsf/rsf


- comment from Walter:

> I tried to make my own potential very much in the same way in which
> plummer.c works, except that I added a routine "potential()", beside
> "potential_double()" and "potential_float()", but identical to
> "potential_double()". It appears that adding "potential()" creates a
> segmentation fault (on returning from "potential_float()"). I don't know
> why, do you?


- compiling on some older linux versions will fail due to a prototype
  for dprintf() in /usr/include/stdio.h - you can comment out our
  version in $NEMOINC/stdinc.h and it will work
  Or add		-DHAVE_DPRINTF
  to CFLAGS (should add that to configure.in)
  The official name is now nemo_dprintf, though internally
  dprintf will stay and #defined to nemo_configure

  still a linking problem on those cases left... (redhat 5.2)
	-ansi ?

- mktemp() should be converted mkstemp() in stropen.c (recent gcc compilers
  will complain about it, but it will work)
  Problem: can't get a fileno from a FILE * (the other way around
  is ok, use fileno()) so we're stuck....

* nbody0: some weird problems with some (all?) gcc 2.96's:
  e.g. gcc 2.96 20000731 (Linux-Mandrake 8.0 2.96-0.48mdk) 
	-O0 	is ok
	-g  	is ok
	-O1 	is bad
	-g -O2	is bad
  cd $NEMO/src/nbody/evolve/aarseth/nbody0
	make clean nbody00 OPT=-O0
	make -f Testfile clean all
  (this assumes you have a makedefs file with hacked OPT in it, not
  CFLAGS)

  gcc3.0 is ok again, as is 2.95.3

- solaris: still get -rdynamic in the link options, it works, but it
  does not look nice. this is for gcc, didn't try /opt/SUNSWpro yet

- Suse didn't resolve fortran binding to C too well for potentials
  (.so object files, e.g. athan92)

- sol8:  potlist does not built due to __powf missing....   (cc)
  need to manually adjust the $NEMOLIB/makedefs file and move the
  -lsunmath line to FORLIBS

- sgi: loadobjDL works for bodytrans, but not potentials....

potlist: rld: Fatal Error: attempted access to unresolvable symbol in
/home/starlab/nemo_3.0.6/obj/mips-sgi-irix6.5/potential/athan92.so: __powdi
  (some conceptual program? since sol8 seems to have the same problem)

  Also, for the SGI at sulfur.amnh.org (where there is some problem with
  the default f77 license) one needs to do

	setenv F77 f90

  before configure is run.  This is a "mips-sgi-irix6.5" machine.

- sgi:  hackforce does not compile/link

- -DSINGLEPREC:  scfm does not work
 		 athan92 shows some significant force differences

- sgi:  for 64 bit mode add
	 -mabi=64   (if gnu) ,or
	-64
  For 64 bit compilations.

? kawai/nbody does not seem to work, neither in IONEMO mode, nor default I/O mode
  (at least on linux)

- fie:  ifgt(%1,0,log(%1),-10) doesn't work,e.g. seems to work in nemoinp
  but not via ccdmath/tabmath, e.g.
   echo -10 | tabmath - - 'ifgt(%1,0,log(%1),%1)'


- cygwin
     mathfns.h   :  rlog2 needs to be #if 0'd because of the macro cygwin is using
     falcON/make.defs:  no -ldl needed
	(also the gcc 3.3 with const in falcON/inc/public/nsam.h is needed)
     falcON/src/public/tool.cc: std::isnan(t)) commented out, doesn't seem to exist

     in addition, tools like mknemo won't copy the executable to $NEMOBIN/ since
     it doesn't know about the .exe  extension thatg cygwin is using

- x86_64:  our configure doesn't always seem to recognize /usr/X11R6/lib64 should be used
  instead of /usr/X11R6/lib ....
  Examples: gaia fails, diary ok:

- cfitsio: currently broken, seems to write huge files in e.g. ccdfits

- magalie: hangs on gcc 4.1.0 ?? but this is the same gcc 4.1.0 in which
	falcON mishbehaves, while on the laptop it's both ok.
- gmake:  not working on FC5 ?

- if configure fails (exit != 0) should we stop the install ??

- pgplot (or yapp_pgplot): if the sccreen aspect ratio is not the
  classic 4:3, the plot is not square


==

pot and acc:  
gyralcON wanted sqr in plummer.so
