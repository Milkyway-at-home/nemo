.TH BODYTRANS 1NEMO "2 August 2006"
.SH NAME
bodytrans \- test and optionally save body to scalar mapping
.SH SYNOPSIS
\fBbodytrans expr=\fP\fIexpression\fP [parameter=value] .\|.\|.
.SH DESCRIPTION
\fIbodytrans\fP is a testbed for saving/debugging a user-specified mapping
from a \fIbody\fP(3NEMO) to a real or integer value.  These mappings
are given by an arbitrary C \fIexpression\fP involving any of the
variables
\fBm\fP, \fBx\fP, \fBy\fP, \fBz\fP, \fBvx\fP, \fBvy\fP, \fBvz\fP,
\fBphi\fP, \fBax\fP, \fBay\fP, \fBaz\fP, \fBaux\fP, \fBkey\fP,
\fBt\fP, and \fBi\fP, using various math library functions, 
\fIe.g.\fP \fBcbrt()\fP, \fBsqrt()\fP, \fBqbe()\fP, \fBsqr()\fP, 
\fBsin()\fP, \fBcos()\fP,
\fBasin()\fP, \fBacos()\fP, \fBtan()\fP, \fBatan()\fP, \fBatan2()\fP,
\fBexp()\fP, \fBdex()\fP, \fBlog()\fP, \fBlog10()\fP, \fBpow()\fP,
\fBfabs()\fP, \fBfloor()\fP, \fBceil()\fP, and \fBrint()\fP.  
(assuming 3 dimensional body's, see ENVIRONMENT below).
.PP
Given
such an expression, \fIbodytrans\fP invokes the C compiler, which is
general but can be rather slow.  To speed things up, an expression is first
treated as a name and checked against a collection of precompiled
expressions stored as ".o" (see \fIa.out(5)\fP)files.  If the expression
is a \fIreal\fP/\fIint\fP expression, it will search for an object file
\fBbtr\fP_\fIexpr\fP\fB.o\fP,
\fBbti\fP_\fIexpr\fP\fB.o\fP resp.
If a match is found, the
precompiled object is used instead.  
If \fIbodytrans\fP has been compiled with auto-saving object files
a next search will be performed on the \fB$NEMOOBJ/bodytrans/BTNAMES\fP 
database.
This contains a list of expressions and names of their object files,
these object files were previously generated by any program
which used the \fIbodytrans(3NEMO)\fP routines.
.PP
A number of precompiled transformations already exist, \fIe.g.\fP: 
\fBx\fP, \fBy\fP, \fBz\fP, \fBvx\fP, \fBvy\fP, \fBvz\fP,
\fBr\fP, \fBv\fP, \fBvr\fP, \fBvt\fP, \fBjtot\fP, \fBphi\fP,
\fBetot\fP, \fBt\fP, and \fBi\fP.  A complete list may be deduced by
looking in \fB$NEMOOBJ/bodytrans/\fP, which is the default
repository.  It is possible to customize your own transformations and
collections; see \fB $NEMO/src/nbody/core/bodysub/\fP for model
routines.
.PP
If \fIbodytrans\fP has been compiled with auto-saving (the default),
the object file will be saved in the standard repository directory
\fB$NEMOOBJ/bodytrans\fP, and the corresponding database file-list
\fBBTNAMES\fP will be updated. When using the same
expression \fIexpr\fP at a later time not only can the user
then refer to the expression by it's original expression, but also by
its pseudo-name \fIfile\fP (see keyword \fIfile\fP and examples below).
.PP
For an alternative approach to use dynamic analysis routines, see
\fImkbodyfunc(1falcON)\fP and 
\fImkbodiesfunc(1falcON)\fP.
.SH PARAMETERS
The following parameters are recognized.
.TP 24
\fBexpr=\fP\fIexpression\fP
Scalar-valued C-language expression specifying the transformation to
test. If keyword \fBfile\fP is present (see below) a mapping file
of the name \fBbtX_file\fP is tried before the expression is turned
into a mapping file. Default: \fBx\fP.
.TP
\fBtype=\fP\fItype_name\fP
Type of value returned; currently either \fBreal\fP or \fBint\fP.
Default: \fBreal\fP.
.TP
\fBmass=\fP\fIbody_mass\fP
Mass of body used to test mapping.  Default: \fB0.125\fP.
.TP
\fBpos=\fP\fIposition_vector\fP
Position of body, specified by a comma-separated list of components.
Default: \fB0.5,-0.5,1.0\fP.
.TP
\fBvel=\fP\fIvelocity_vector\fP
Velocity of body.  Default: \fB0.1,0.2,-0.3\fP.
.TP
\fBphi=\fP\fIpotential_value\fP
Gravitational potential at position of body.  Default: \fB-1.2\fP.
.TP
\fBacc=\fP\fIacceleration_vector\fP
Acceleration of body.  Default: \fB-0.5,0.7,0.1\fP.
.TP
\fBaux=\fP\fIauxiliary_value\fP
Real auxiliary value associated with body.  Default: \fB3.141592\fP.
.TP
\fBkey=\fP\fIkey_value\fP
Integer key value associated with body.  Default: \fB3\fP.
.TP
\fBt=\fP\fItime_value\fP
Time value available to \fIexpression\fP.  Default: \fB2.5\fP.
.TP
\fBi=\fP\fIindex_value\fP
Body index available to \fIexpression\fP.  Default: \fB1\fP.
.TP
\fBfile=\fP\fIfile_name\fP
Tail of the filename under which the \fBexpr\fP transformation is to be
saved for later recovery. Note that the first four characters of
the filename are already fixed and will be \fBbtX_\fP, where
\fBX\fP is either \fBr\fP or \fBi\fP, depending on the
\fBtype\fP (see above) of the expression. The full filename
will hence be \fBbtX_file\fP. [default: not used].
.TP
\fBbtname=\fP\fIfile_name\fP
File containing a database of expression and filenames under which
they are to be saved. When used, the program (re) creates
all bodytrans(5) files and exits. [default: no used].
.TP
\fBshow=t|f\fP
Show the currently saved bodytrans functions (from the BTNAMES files).
[Default: \fBf\fP].
.SH EXAMPLE
The following command
.nf
    % \fBbodytrans expr=x+y+z alias=sum\fP
.fi
saves the mapping in an object file \fIbtr_sum.o\fP, and can be 
later used as in:
.nf
    % \fBsnapprint snap-file x+y+z\fP
.fi
or using this alias
.nf
    % \fBsnapprint snap-file sum\fP
.fi
It is not necessary to provide a pseudonym using the keyword \fBalias\fP,
although recommended if \fIbodytrans\fP is used.
As an example, the command
.nf
    % \fBbodytrans expr=x+y+z\fP
.fi
could save the mapping in an object file \fIbtr__24\fP, and can
later be referred to as
.nf
    % \fBsnapprint snap-file x+y+z\fP
.fi
or the more cryptic
.nf
    % \fBsnapprint snap-file _24\fP
.fi
The relationship between \fI_24\fP and \fIx+y+z\fP is saved
in the file \fBBTNAMES\fP and resolved at run-time.
.SH BTclean
There is a shell script \fBBTclean\fP that selectively cleans up
object files listed in the BTNAMES file. A new 'BTNAMES' file
is generated. You can run it interactively (have to be NEMO user though)
and answer some simple questions.
.SH ENVIRONMENT
By default, body to scalar transformations are applied to bodies which
have vectors of lenght 3 (see also vectmath(3NEMO)). By adding
\fB-DTWODIM\fP to the environment variable \fBCFLAGS\fP, newly
created bodytrans variables are compiled with 2D bodies. Obviously
it is very dangerous to mix 2D and 3D bodies, but the possibility
exists.
.SH SEE ALSO
body(3NEMO), bodytrans(3NEMO), vectmath(3NEMO), snapshot(5NEMO),
mkbodyfunc(1falcON), mkbodiesfunc(1falcON)
.SH AUTHOR
Joshua E. Barnes, Peter Teuben
.SH FILES
.nf
.ta +2i
~/src/nbody/core/bodytrans.c	code
~/src/nbody/core/bodysub/*	default standard bodytrans(5) files
.fi
.SH HISTORY
.nf
.ta +1i +4i
xx-xxx-87	V1.0 Created     	JEB
8-jul-89	V1.1 saving bodytrans mappings into user files	PJT
19-nov-89	V1.2 BTNAMES database used for saving	PJT
10-dec-91	some more doc	PJT
12-aug-92	documented CFLAGS usage 	PJT
2-aug-06	V3.3 add show=	PJT
.fi
