.TH NEMO 1NEMO "2 March 2006"
.SH SYNOPSIS
\fBprogram [key1=]val1 [key2=]val2 .\!.\!.
.SH DESCRIPTION
\fBNEMO\fP is a \fIStellar Dynamics Toolbox\fP for users and
programmers. It has various
programs to create, integrate and analyze N-body systems. In addition
there are various tools to operate on images, tables and orbits,
including FITS files to export/import to/from other astronomical
data reduction packages.
.PP
A good start is the manual page \fIprograms(8NEMO)\fP, which lists
programs thematically, and \fIindex(1NEMO)\fP, which lists them 
alphabetically (CAVEAT: these pages are often out of date).
.PP
\fBNEMO\fP is very much integrated into the Unix(tm) operating system,
so users are expected to use standard Unix or Local commands as glue
between the various tasks (cat, ls, rm, cp, awk, mongo, sm, \fIetc.\fP).
Understanding of shell scripting (sh,csh,python,perl,...) can be
very useful. Several example shell scripts exist in the source code
to demonstrate how experiments can be orchestrated.
.SH GETTING STARTED
What you need to do to set yourself up for \fBNEMO\fP:
.PP
The easiest way is to add the appropriate line to your \fI.cshrc\fP or
\fI.bashrc\fP file:
.nf
        \fIsource $NEMO/nemo-start.csh\fP
or
        \fIsource $NEMO/nemo-start.sh\fP
.fi
.PP
If you need more control over your environment, there are other methods
described elsewhere (The \fINEMO Users/Programmers Guide\fP, Appendix A),
or consult one of your local or remote friendly NEMO users.
.SH HOW TO RUN NEMO PROGRAMS
NEMO programs can be run just as any other command in Unix, in that sense
NEMO is nothing more than an extension of Unix.
.PP
NEMO programs all work by using a series of \fIkeyword=value\fP pairs
on the commandline.
If the order of the supplied keywords is the same as the
program expects them, the \fIkeyword=\fP part can be omitted, simply to save
keystrokes.  There is a consistent ordering of keywords in most programs
that allows experienced users to use such (and other) shortcuts.
(e.g. \fBin=\fP the first one, \fBout=\fP the second one etc.). Keywords
can be used in minimum match, but this is not recommended for shell
scripts.
.PP
NEMO programs make a distinction between
\fBprogram\fP keywords (keywords unique to a program) and \fBsystem\fP 
keywords (a
fixed set of keywords that each NEMO program understands).  The system
keywords that you are likely to
use are \fI help=\fP and \fIyapp=\fP, and to a lesser degree 
\fIdebug=\fP and \fIerror=\fP.  The \fIhelp=\fP gives various types of 
inline aid from a program. There is also online help on a 
program, for which unix \fIman(1)\fP command (or any of it's derived friends)
is normally used. The \fIyapp=\fP sets the graphics device used by
programs who use a graphics device. You system manager may have given
you a default.
.PP
Each \fBsystem\fP keyword can be defaulted by setting it's equivalent
environment variable (in upper case though). Program keywords can be
abbreviated to uniqueness.
.PP
Examples: Consider the program \fImkplummer\fP, a program which creates
an N-body realization of a Plummer sphere:
To get online help, one types:
.nf
        \fIman mkplummer\fP
.fi
and to get various types of inline help:
.nf
        \fImkplummer help=\fP
        \fImkplummer help=h\fP
        \fImkplummer help='?'\fP
.fi
Note the literal quotes around the question-mark needed if you use
a regular Unix shell as interface.
The first \fIhelp=\fP reminds you of the order of the
program keywords and their default values. The second form, \fIhelp=h\fP
prints out a small one-line reminder what each keyword means. The last
form \fIhelp='?'\fP lists various options the user interface understands,
this one is not program dependant.
.PP
If you chain NEMO programs, pipes can be a very efficient way to
prevent large amounts of disk access. Most keywords that operate 
on files (notably \fBin=\fP, \fBout=\fP, as long as
\fIstropen(3NEMO)\fP is used) can use standard piped I/O by using
the dash (\fB-\fP) to name the keyword, e.g.
.nf
    mkplummer - 100 | tsf -
.fi
would create a snapshot of 100 bodies on the fly, and display it to the
user using \fBtsf\fP. The alternative would have been
.nf
    mkplummer out=tmp nbody=100
    tsf in=tmp
    rm tmp
.fi
.SH SEE ALSO
index(1NEMO), programs(8NEMO), tricks(8NEMO), mkplummer(1NEMO), files(8NEMO),
nemoinp(1NEMO), stropen(3NEMO), getparam(3NEMO), pipestatus(l)
.SH AUTHOR
Peter Teuben (e-mail: teuben@astro.umd.edu  phone: 301-405-1540)
.SH FURTHER INFORMATION
The \fINEMO Users/Programmers Guide\fP contains most of
the information you need to get down to the guts of the system.
.PP
Various \fIman(1NEMO)\fP pages explain programs(1), subroutine libraries(3)
file formats(5) and system management(8).
.PP
The World Wide Web homepage \fIhttp://www.astro.umd.edu/nemo\fP.
.SH BUGS
Since programs are being modified, and extended fairly regularly, 
manual pages for related programs do not always know about these
changes if they should. Keeping good cross references in the manual
pages might help.
