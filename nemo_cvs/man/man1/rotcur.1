.TH ROTCUR 1NEMO "2 June 2004"
.SH NAME
rotcur \- fit parameters to velocity field using tilted rings
.SH SYNOPSIS
\fBrotcur in=\fPvelfie [parameters=values ...]
.SH DESCRIPTION
\fIrotcur\fP derives the kinematical parameters from the observed
velocity field by fitting a tilted-rings model to the velocity field.  It
does a non-linear least-squares-fitting to the function:
.PP
.cs 1 20
.ss 20
.nf
         v(x,y) = VSYS + VROT * cos(theta) * sin(INC)

                      - (x-XPOS) * sin(PA) -/+ (y-YPOS) * cos(PA) ?
where:   cos(theta) = -----------------------------------------
                                       r

                      - (x-XPOS) * cos(PA) - (y-YPOS) * sin(PA)
and:     sin(theta) = -----------------------------------------
                                   r * cos(INC)


.cs 1
.fi
where the radius \fIr\fP is measured in the plane of the galaxy:
.cs 1 20
.ss 20
.nf

         r = sqrt( (x-XPOS)**2 + (y-YPOS)**2/cos(INC)**2 )

.cs 1
.fi
.PP
In the above formula
\fIv(x,y)\fP denotes the radial velocity at rectangular sky
coordinates \fIx\fP and \fIy\fP, \fIVSYS\fP the systemic 
velocity, \fIVROT\fP the rotational
velocity, \fIINC\fP the inclination angle and \fItheta\fP the 
azimuthal distance
from the major axis in the plane of the galaxy.  
In itself, \fItheta\fP is a function of
the inclination (\fIINC\fP) and the 
position angle (\fIPA\fP) of the major axis.
\fIXPOS\fP and \fIYPOS\fP denote the position of the rotation center
in pixels w.r.t. 0,0 being the lower left corner of the map.  \fIrotcur\fP
can fit for each ring the 6 parameters
\fIVSYS\fP, \fIVROT\fP, \fIINC\fP, \fIPA\fP, \fIXPOS\fP
and \fIYPOS\fP, though any combination of them can be fixed
(see \fBfixed=\fP).
The position angle \fIPA\fP of the major axis is defined as the
angle, taken in anti-clockwise direction between the north direction on
the ``sky'' and the major axis of the receding half (positive 
radial velocity) of the galaxy. 
.PP
Values equal the undefined value (currently 0.0) are ignored in the
fit. See \fIccdmath(1NEMO)\fP or \fIfitsccd(1NEMO)\fP on how to
create a velocity field with such undefined values.
.PP
By setting the keyword \fBfitmode=\fP appropriately, \fIrotcur\fP can
also be used to fit a model of pure expansional velocities:
.cs 1 20
.ss 20
.nf

         v(x,y) = VSYS + VROT * sin(theta) * sin(INC)

.cs 1
.fi
use \fBfitmode=sin,1\fP in this case. \fIcurrently XPOS and YPOS \fBmust\fP
be held fixed in this case\fP.
.PP
For a detailed discussion of this method see K. Begeman,
\fIAstr. & Astrophys. \fP \fB223\fP, 47. (1989) and references
therein.
.PP
See also \fIvelfit(1NEMO)\fP on the classic WWB73
(Warner, Wright and Baldwin, 1973, MNRAS, 163,163) method.
.SH PARAMETERS
The following parameters are recognized:
.TP 25
\fBin\fP=\fIimage_vel\fP
Input velocity field map, either in \fIimage(5NEMO)\fP format, or
\fItable(5NEMO)\fP format. See also \fBimagemode=\fP below.
No default.
.TP
\fBradii\fP=\fIr0,r1,r2,...rN\fP
Inner and outer radii for \fIN\fP touching rings (in arcsec).
Remember that the number of radii is hence one more
than the number of rings. The \fBunits=\fP keyword can be used to
scale your physical units in the header to ``human readable'' units
(arcsec). Radii must be either all increasing or decreasing. Note that
the corresponding keyword in \fBGIPSY\fP has a different meaning, 
where they denote the ring centers, and a different keyword
\fIWIDTHS=\fP controls the width of each ring.
No default.
.TP
\fBvrot\fP=\fIv1,v2,...vN\fP
Array of rotation (or expansion) velocities, one for each ring. 
If less than the number of rings is
given, the trailing ones are filled with the last supplied value.
.TP
\fBpa\fP=\fIp1,p2,...pN\fP
Array of position angles (degrees), one for each ring. 
As is the convention, this is the PA of the receding side of
the galaxy.
See also \fBvrot=\fP.
.TP
\fBinc\fP=\fIi1,i2,...iN\fP
Array of inclinations (degrees), one for each ring.
See also \fBvrot=\fP.
.TP
\fBvsys\fP=\fIv0\fP
Systemic velocity. Only one number applies, though VSYS can vary
accross rings.
.TP
\fBcenter\fP=\fIx0,y0\fP
Rotation center (grid units w.r.t. lower left corner being
0,0). Two numbers are required.
Default: center of map.
.TP
\fBfrang\fP=
free angle around minor axis (degrees), in the plane of
the galaxy, from which data is excluded from
the fit (thus the total cone size of ignored data around
the minor axis is 2*\fBfrang\fP)
[Default: \fB20.0\fP].
.TP
\fBside\fP=
Choose the side of the galaxy to fit the velocity field to.
Valid options are \fBreceding\fP, \fBapproaching\fP 
or \fBboth\fP side(s). [Default: \fBboth\fP].
.TP
\fBweight\fP=
Choice of geometric weighting function with which points are weighed into
the least squares solution as a function of galactic angle away
from the major axis. Valid options are: \fBuniform\fP, \fBcosine\fP,
and \fBcos-squared\fP.
[Default: \fBcosine\fP].
.TP
\fBfixed\fP=
List of parameters, separated by commas, to be kept fixed during the fit.
Choose any of the
following: \fBvsys, vrot, pa, inc, xpos, ypos\fP, although at least
one parameters should be kept free. [Default: none, i.e. all parameters
free.
.TP
\fBellips\fP=
The names of two parameters for which to calculate an error ellips. 
(see \fBfixed=\fP). For the two parameters it shows the major
and minor axis, position angle of the one sigma deviation ellipse.
[Default: not used]
.TP
\fBbeam\fP=
The beam size (FWHM) for beam correction. One or two numbers required.
Currently these are only used to correct error bars for the number
of independant points per beam. If not given, each point is assumed
independant. [no correction].
.TP
\fBdens\fP=\fIimage_den|true|false\fP
Image containing the density. From this local derivatives
\fI(dN/dx)/N\fP and 
\fI(dN/dy)/N\fP are computed numerically, and used for an 
estimate of beam smearing corrections. Note that for
bizarre reasons this keyword can be used to trigger reading
a weight column in tabular input mode (\Bimagemode=\fP).
[Default: required if a beam is supplied].
.TP
\fBtab\fP=
If specified, this output table is used in \fIappend\fP mode!
This table can be piped through \fItabcomment(1NEMO)\fP and 
fed to \fIccdvel(1NEMO)\fP to create model velocity fields.
[Default: not used].
.TP
\fBresid\fP=
If specified, this output will either contain a residual image
(OBS-FIT) if the input file was an image, or a
table with X, Y, Velocity and Residual Velocities in each ring. 
Each ring will be separated from
the previous one with a simple commented line specifying which ring
it refers to. 
[Default: not used].
.TP
\fBtol\fP=
Tolerance for convergence of \fInllsqfit\fP [Default: \fB0.001\fP].
.TP
\fBlab\fP=
Mixing parameter for \fInllsqfit\fP [Default: \fB0.001\fP]
.TP
\fBitmax\fP=
Maximum number of allowed \fInllsqfit\fP iterations [Default: \fB50\fP]
.TP
\fBunits\fP=
Units of input axes for radius and velocity. Valid options are
\fBdeg, arcmin, arcsec, rad\fP for radius.
A numeric value can also be given,
in which case your image pixel separation from the
image header is multiplied by this
number to get to the ``arcsec'' that will be quoted in
the tables. The units for velocity can only be numeric, and will be the
factor by which the velocities in the map are multiplied.
[Default: \fBdeg\fP]
.TP
\fBblank=\fP
Value of the blank pixel that needs to be ignored. [Default: \fB0.0\fP].
.TP
\fBinherit=t|f\fP
Logical denoting if the initial conditions for subsequent fitted rings
should be inherited from the previous successfully fitted ring. The fixed
parameters keep of course their fixed value. [Default: \fBt\fP]
.TP
\fBreuse=t|f\fP
Reuse pixels between rings. If neighboring rings have a different geometries,
it can occur that pixels will be reused. This flag will prevent that.
Note, if you don't reuse pixels, rotcur will more likely produce a different
rotation curve if you start at outer rings,e.g. radii=100:0:-10.
[Default: \fBt\fP]
.TP
\fBfitmode=\fP\fBcos|sin\fP\fB,1\fP
.TP
\fBnsigma=\fP
Reject outlier points will fall outside nsigma times the dispersion 
away from the mean velocity in a ring. By default, it will not reject any outliers.
.TP
\fBimagemode=t|f\fP
Image input file mode? By default the input file is an image, alternatively a simple
ascii table with X and Y positions in columns 1 and 2, and radial velocities
in column 3, and optional errors in the radial velocity in column 4
(activated by setting \fBdens=t\fP).
[Default: t]
.TP
\fBwwb73=t|f\fP
Use a simpler WWB73 linear method of fitting? [false]
.SH AWK
The standard output is normally not very useful; it displays, for each
iteration, the run of parameters plus the number of points and mean
error in the ring. The following \fIawk(1)\fP
scripts may be useful to extract
information per ring:
\fIiter. number, vsys, vrot, pa, icn, xpos, ypos, npoints, sigma_vel\fP.
.nf

BEGIN{count=0;line="";}
{
  if ($1 == "radius"){
    if (count != 0){
      printf("%s  %s\n",rad,line);
      rad=$4;
    }else{
      count=1; 
      rad=$4;
    }
  }else{
    line=$0
  }
}
END{printf("%s  %s\n",rad,line);}

.fi
.SH EXAMPLE
Here is an example of creating a synthetic velocity field with
ccdvel, and analysing it with rotcur:
.nf
    % set r=`nemoinp 0:100:5`
    % set v=`nemoinp 0:100:5 | tabmath - - "100*%1/(20+%1)" all`
    % ccdvel out=map1.vel rad="$r" vrot="$v" pa=30 inc=60
    % rotcur in=map1.vel radii=0:100:5 vrot=0:100:5 pa=30 inc=60 vsys=0 tab=map1.rotcur units=arcsec,1

    % head map1.rotcur
  radius   systemic   error  rotation   error position    error   inclination  error   x-position   error   y-position   error
          velocity           velocity           angle               angle               of center            of center
 (arcsec)   (km/s)   (km/s)   (km/s)    (km/s)(degrees)  (degrees)  (degrees)   (degrees) (grids w.r.t. (0,0))  (grids w.r.t. (0,0))
     7.50      0.00     0.44     27.08    0.50    30.45       1.09      59.72       2.47      63.50      0.20      63.50      0.30 96
    12.50     -0.00     0.24     38.54    0.28    30.66       0.41      59.27       0.94      63.50      0.13      63.50      0.20 150

    ...

    % tail map1.rotcur
 average inclination      :    59.93  (   0.043)  degrees
 average position angle   :    30.05  (   0.044)  degrees
 average systemic velocity:    -0.00  (   0.001)  km/s
 average x-position       :    63.50  (   0.000)  grids
 average y-position       :    63.50  (   0.001)  grids


.fi
.SH BUGS
Failures in \fInllsqfit\fP are not handled gracefully, and may
\fIerror\fP out the program. Usage of the \fBerror=\fP system
keyword can be used to bypass such bad rings, use with caution
though and study the output.
.PP
Errorbars quoted in the table are only an estimate since the beam
size is not known. Multiply these numbers by the square root
of the number of pixels per beam to get a more realistic estimate.
If the beamsize, \fBbeam=\fP, is given, the formulae of Sicking (1997) is used
to correct the errors for:
.nf

	factor = sqrt(4.PI.B_x.B_y/(D_x.D_y))

.fi
.PP
Sign of the pixelsize \fIDx,Dy\fP in the CCD header is ignored, and an astronomical
image is assumed. See also the \fBreuse=\fP keyword.
.PP
For calculations of residuals in  overlapping rings (e.g. warps) only the last ring velocity
will be used.
.SH SEE ALSO
ccdvel(1NEMO), tabcomment(1NEMO), rotcurves(1NEMO), rotcurshape(1NEMO), pvtrace(1NEMO), runvelfitss07(1NEMO), ccdmom(1NEMO), gal(AIPS)
.SH AUTHOR
K. Begeman (original GIPSY Sheltran version, now also available in C),
P. J. Teuben (NEMO C version)
.SH UPDATE HISTORY
.nf
.ta +1i +4i
19/jul/83	original program                     	KGB
9/mar/85	revision of program                 	KGB
23/may/86	migrated to VAX-VMS                  	KGB
27/nov/88	UNIX version                           	pjt
8-feb-91	flushed buffers ROTCUR.DAT each write	pjt
30-apr-91	moved to NEMO into C                   	pjt
10-sep-91	documentation improved           	pjt
17-oct-91	added Npts to table output      	pjt
21-may-92	added Bob Gruendl's rotcur awk scripts	PJT
12-jun-92	added inherit=t as default      	PJT
13-aug-92	implemented fitmode= without XPOS,YPOS	PJT
15-oct-99	compute residuals and add resid=	PJT
14-mar-01	V2.5: clarifications, added nsigma=    	PJT
9-may-01	V2.6a: corrected error correction factor	PJT
10-aug-01	clarified some differences between NEMO and GIPSY versions	PJT
26-jan-02	Added unit (scale factor) for velocity too	PJT
26-jun-02	V2.8: added tabular input for irregular spaced data, fixed example	PJT
11-sep-02	V2.9: implemented map residual velocity field	PJT
30-jan-03	V2.10: allow tables to use error in velocity	PJT
2-jun-04	V2.12: finally implemented the reuse= option	PJT
.fi
