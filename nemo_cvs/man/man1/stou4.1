.TH STOU4 1NEMO "4 March 2006"
.SH NAME
stou4 \- convert snapshot to unit-4 for NBODYx
.SH SYNOPSIS
\fBstou4\fP [parameter=value]
.SH DESCRIPTION
\fBstou4\fP converts a NEMO snapshot format to a fortran
unformatted file, used in
\fInbody1(1NEMO)\fP and 
\fInbody2(1NEMO)\fP to read initial conditions from an external file.
.PP
Note that some versions will now use ASCII, for which \fIsnapprint(1NEMO)\fP
will have to be used. \fPnbody4(1NEMO)\fP uses the ASCII version, controlled
by setting KZ(22), and on unit-10 instead.
.SH PARAMETERS
The following parameters are recognized in any order if the keyword
is also given:
.TP 20
\fBin=\fP
input file name, must be a \fIsnapshot(5NEMO)\fP format. 
No default.
.TP
\fBout=\fP
output file name. [Default: fort.4]    
.TP
\fBheader=|4|8\fP
Fortran header size, **ignored now, fortran is used to write**
By default the value determined to be the correct value for your compiler is used.
.SH FORTRAN
The following type of fortran code will read from unformatted 
unit 4
.nf
  DO i=1,N
    READ (4)  BODY(I), (X(K,I),K=1,3), (XDOT(K,I),K=1,3)
  ENDDO
.fi
Note that another version of nbody2 used the \fBREAD (4,*)\fP
format, so a simple table using \fIsnapprint(1NEMO)\fP can
be made:
.nf
    % mkplummer out=p100 nbody=100
    % snapprint in=p100 options=m,x,y,z,vx,vy,vz > fort.4
.fi
.SH SEE ALSO
u4tos(1NEMO), nbody1(1NEMO), nbody2(1NEMO), snapshot(5NEMO)
.SH AUTHOR
Peter Teuben
.SH UPDATE HISTORY
.nf
.ta +1.0i +4.0i
07-Apr-93	V0.0 Created	PJT
17-mar-04	better documented	PJT
.fi
