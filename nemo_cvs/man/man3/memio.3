.TH MEMIO 3NEMO "11 May 1994"
.SH NAME
memopen, memclose, memseek, memfread, memdread, memiread \- 
memory operations to aid casting/parsing misaligned data
.SH SYNOPSIS
.nf
.B #include <stdinc.h>
.B #include <memio.h>
.PP
\fBmem    *memopen(char *buf, int buflen)\fP
\fBvoid   memclose(mem *mp)\fP
\fBfloat  memfread(mem *mp)\fP
\fBdouble memdread(mem *mp)\fP
\fBint    memiread(mem *mp)\fP
\fBvoid   memseek(mem *mp, int loc, int mode)\fP
.PP
.SH DESCRIPTION
\fImemio\fP are a set of routines that allow you to handle misaligned
data. A arbitrarely sized buffer, pointed to by \fBbuf\fP, in memory is 
used. From this location seqeantial access using the \fImemXread()\fP 
routines can be done, although the usual kind of \fImemseek()\fP operations
(see also \fIfseek(3)\fP or \fIseek(2)\fP)  allow flexible (re)location
within this buffer.
.PP
\fImemclose()\fP free's up the memory allocated by \fImemopen()\fP.
.SH BUGS
Some forms of out-of-memory are not detected. Others cause 
\fIerror(3NEMO)\fP to be called, that generally abort the  program.
.SH LIMITATIONS
The buffer \fBbuf\fP that was opened by \fImemopen\fP  should not be
free'd or modified, otherwise unpredictable things may happen.
.SH SEE ALSO
unfio(3NEMO)
.SH AUTHOR
Peter Teuben
.SH FILES
.nf
.ta +1.5i
~/src/kernel/io  	memio.c
.fi
.SH UPDATE HISTORY
.nf
.ta +1i +4i
10-may-94	V1.0 Created       	PJT
.fi

