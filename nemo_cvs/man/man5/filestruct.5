.TH FILESTRUCT 5NEMO "16 May 1992"
.SH NAME
filestruct \- binary structured file format 
.SH SYNOPSIS
.nf
\fB#include <stdinc.h>\fP
\fB#include "filesecret.h"\fP        \fI only for local code\fP
\fB#include <filestruct.h>\fP
.fi
.SH FORMAT
.nf
\fB struct _disk_item {\fP		\fINote: DOES NOT EXIST!!\fP
\fB    short int magic;\fP
\fB    char *tag;\fP		(\fIzero terminated\fP)
\fB    char *type;\fP		(\fIzero terminated\fP)
\fB    int  *dim;\fP		(\fI4 byte zero terminated, optional\fP)
\fB    char *data;\fP		(\fIoptional\fP)
\fB };\fP
.PP
\fB struct item {\fP
\fB    string itemtyp;\fP
\fB    int    itemlen;\fP
\fB    string itemtag;\fP
\fB    int   *itemdim;\fP
\fB    byte  *itemdat;\fP
\fB    long   itempos;\fP
\fB };\fP
.PP
\fB struct strstk {\fP
\fB    stream  ss_str;\fP
\fB    item   *ss_stk[SetStkLen];\fP
\fB    int     ss_stp;\fP
\fB    bool    ss_seek;\fP
\fB    long    ss_pos;\fP            \fI/* only if RANDOM access allowed */\fP
\fB    itemptr ss_ran;\fP            \fI/* only if RANDOM access allowed */\fP
\fB };\fP
.fi
.SH DESCRIPTION
\fIfilestruct\fP is a method for storing data files largely
consisting of character strings, booleans, and possible
multi-dimensional arrays of data.  This data may be structured in a
hierarchical form similar to the Unix directory structure, although
there are additional constraints imposed by the essentially linear
nature of the storage media.
.PP
The external data format (visualized by an otherwise non-existing
\fBstruct _disk_item\fP) is a tagged list of data \fIitem\fPs, 
each containing
a magic number (also containing information if the item is a single
number or an array), a tag name for identification and search purposes, 
a data type and optionally a dimension followed by a contiguous data 
stream. Certain data types (such as \fBset\fPs) 
do not have a dimension and data associated with them,
but merely aid in structuring the data in hierarchical sets.
.PP
The is optional integer array \fB*dim\fP  is zero terminated,
it's presence depends on the value of the \fBmagic\fP header number. As said before,
if the data type is a \fBset\fP or \fBtes\fP (see below), no data is present either.
.PP
The intermediary internal format is also called an \fIitem\fP, and is defined
by the \fBstruct item\fP. In addition to the data-type the basic
length of a data chunk, \fBitemlen\fP,
within this item is obtained from a look-up table. Deferred input is achieved
by storing the data in a block pointed to by \fBitemdat\fP if it is
small enough, and keeping track of the file position where the data started
otherwise. This is essentially the reason why pipes cannot be used in
\fIfilestruct\fP.
.PP
The actual internal format is governed how the application programmer 
uses the \fIget_XXX\fP and \fPput_XXX\fP routines (see 
\fIfilestruct(3NEMO)\fP).
.SH EXPERIMENTAL FEATURES
If compiled with \fB-DRANDOM\fP 
some limited random access to data within a data-item is possible.
.PP
If compiled with \fB-DCHKSWAP\fP the disk format is checked against
little/big endian machines. Otherwise,
data on disk exist in the host format, and no effort has been made to make
it machine independant (e.g. IEEE floating points and twos-compliment
integers). This is however expected in some future release.
.SH FILES
.nf
.ta +2.0i
~/src/uNEMO        	a limited NEMO-I/O only library (libunemo.a)
~/src/kernel/io   	filesecret.[ch] filestruct.h
~/inc              	filestruct.h
.fi
.SH SEE ALSO
tsf(1NEMO), rsf(1NEMO), csf(1NEMO), filestruct(3NEMO)
.SH AUTHOR
Joshua Barnes, Lyman Hurd, Peter Teuben
.SH UPDATE HISTORY
.nf
.ta +1.0i +4.0i
dark-ages	V0.0 precurser (filestr)	JEB
xx-apr-87	V1.0 basic operators     	JEB
xx-jul-87	V1.x added f-d coercion, deferred output	Lyman Hurd
xx-xxx-87	V2.0 new types, operators, external fmt  	JEB
9-oct-90	V2.2 created man page, adding random access	PJT
20-nov-90	V2.2a merged old man page from Lyman into this one 	PJT
16-may-92	V3.0 finalized random access                        	PJT
6-jul -01	documented the new uNEMO   	PJT
.fi
