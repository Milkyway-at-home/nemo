#	~/src/nbody/evolve/aarseth/nbody0
#	21-nov 	   	HOSTTYPE
#	17-may-91	NEMO V2.x
#	16-oct-91	new sun fortran 1.4 compiler - linking via f77
#	10-may-92	handedited f2c version of nbody0.f

CFLAGS = -g
#FFLAGS = -dp -Wf"-o off"
FFLAGS = -dp -Zp
FC=cf77

#	maximum number of particles which can be integrated by Nbody0
NMAX = 1024
#	Note the absence of the NDIM macro, as NDIM <> 3 is not supported
#	in nbody0.f (yet). - july 1989 , PJT

L = $(NEMOLIB)/libnemo.a
# linking is now done via f77 command, hence no LIBF77 needed anymore
#LIBF77 = -lF77 -lI77 -lU77 -lF77 -lI77 -lU77
LIBF77 =

SRCDIR = $(NEMO)/src/nbody/evolve/aarseth/nbody0
SRC = nbody0.f nbodyio.c nbodyio.f main.c main.f \
      fdefs.inc nmax.inc \
      nbody0.c nbody0.h \
      Makefile README
BIN = nbody0 nbody00 nbody0_ff
MAN1= nbody0.1
MAN = $(MAN1)
help:
	@echo "Aarseth programs - from Binney and Tremaine"
	@echo "Various Fortran and C versions available"
	@echo "target:     main:    I/O:"
	@echo ""
	@echo " ff         F        F        (vanilla I/O)"
	@echo " cc         c        c        (nemo)"
	@echo ""
	@echo "Note:"
	@echo "User definable macro is the NMAX macro (currently $(NMAX))"
	@echo "which is used to generate a new include file"
	@echo "such that this will be the maximum number of particles"
	@echo "that can be integrated with NBODY0"
	@echo "Assuming your local fortran compiler FC=$(FC) knows the"
	@echo "INCLUDE statement."

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#		N E M O  Install					#
nemo_lib:
	@echo No nemo_lib in `pwd`
#									#
nemo_bin:	$(BIN)
	mv $? $(NEMOBIN)
	rm -f *.o

nemo_src:
	-@for i in $(BIN); do \
	echo `pwd` $$i ; done 
		
		
#									#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 

install:  install_src install_man

install_src: $(SRC)
	cp $? $(SRCDIR)
	@touch install_src

install_man:  install_man1

install_man1: $(MAN1)
	cp $? $(NEMO)/man/man1
	@touch install_man1

install_bin: $(BIN)

clean:
	rm -f $(BIN) *.o *.a core

#  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  #  
nbody0: main.o nbody0.o nbodyio.o
	$(FC) $(FFLAGS) -o nbody0 main.o nbodyio.o nbody0.o \
 		$(L) $(LIBF77) -lm

nbody00: main.o nbody00.o nbodyio.o
	$(FC) $(FFLAGS) -o nbody00 main.o nbodyio.o nbody00.o \
 		$(L) $(LIBF77) -lm

nbody00.o: nbody0.c
	$(CC) $(CFLAGS) -c nbody0.c
	mv nbody0.o nbody00.o

main.o: main.c
	$(CC) $(CFLAGS) -c main.c

nbodyio.o: nbodyio.c
	$(CC) $(CFLAGS) -c nbodyio.c

nbody0.o:  nbody0.f nmax.inc
	$(FC) $(FFLAGS) -c nbody0.f

#	Vanilla fortran stuff: no NEMO I/O 

nbody_ff:  main.f nbodyio.f nmax.inc nbody0.o
	$(FC) $(FFLAGS) -o nbody_ff main.f nbodyio.f \
 		nbody0.o -lm

double:
	@echo Tarfile for cray-et-al, all DOUBLE's become REAL
	@mkdir tmp
	-@for i in $(SRC); do\
	(sed "s/DOUBLE PRECISION/REAL/g" $$i > tmp/$$i);done
	@(cd tmp;tar cvf ../double.tar *;cd ..;rm -r tmp)
	@echo All done, file double.tar created

tar:
	@tar cvf nbody0.tar $(SRC) $(MAN)
nmax:	.dummy

.dummy:
	@echo "Creating new nmax.inc with NMAX=$(NMAX)"
	@echo "C include file generated by Makefile - do not edit" > nmax.inc
	@echo "C see Makefile for instructions"                   >> nmax.inc
	@echo "      INTEGER NMAX, NDIM"                          >> nmax.inc
	@echo "      PARAMETER ( NMAX=$(NMAX) )"                  >> nmax.inc
	@echo "C do not changed the NDIM value, nbody0.f does not support it" >>nmax.inc
	@echo "      PARAMETER ( NDIM=3 )"                        >> nmax.inc
	@echo "C end of include file"                             >> nmax.inc
	@echo "A new file nmax.inc with NMAX=$(NMAX) has just been created."
