#! /bin/csh -f
#
#   This script is a bootstrap loader for NEMO. It picks up the most
#   recent compressed tar file from Maryland, and installs it in
#   a directory of your choice. It then proceeds and install scripts,
#   tries to compile the libraries, and attempts to compile a few
#   small programs.
#
#   Most common usage:
#
#       chmod +x bootstrap
#       bootstrap nemo=/usr/nemo
#
#   where /usr/nemo is the ultimate location of $NEMO (the default is the
#   current directory)
#
#   This script is not needed anymore, CVS has been taken its functionality.
#
#   Known problems:
#       convex: instead of make, use src/scripts/make.convex as $NEMOBIN/make

# set local aliases
alias stamp 'date +%H:%M:%S'

# set defaults
set site=ftp.astro.umd.edu
set get=wget
set dir=pub/nemo
set file=nemo_3.0.1.tar.gz
set nemo=$cwd
set goto=start
set cc=""
set yapp=null
set pgplot=""
set tmp=/tmp/tmp$$
set config=""

foreach kv ($*)
  if ("$kv" == go) break
  set $kv
end


set VERSION="3.1 9-apr-01"


if ($#argv == 0) then
  echo "Usage: $0 [keyword=value] ..."
  echo "with the following optional key=val's"
  echo ""
  echo "  [site=$site]  ## mother site"
  echo "  [get=$get]    ## method to get file (ftp,wget)"
  echo "  [dir=$dir]    ## anon ftp directory where tar files exist"
  echo "  [file=$file]  ## nemo (compressed) tar file"
  echo "  [nemo=$nemo]  ## name of new directory within which NEMO will be installed"
  echo "  [goto=$goto]  ## label to goto in this script "
  echo "                (start, tar, install, prog, test, suite)"
  echo "  [cc=$cc]      ## hardcode C compiler"
  echo "  [yapp=$yapp]  ## override YAPP interface choice (null, pgplot) -not active-"
  echo "  [pgplot=$pgplot]     ## pgplot TAR file to install (special)"
  echo "  [config=$config]     ## options for configure"
  echo ""
  echo "Bootstrap new nemo version from mother site or local tar file"
  echo "VERSION $VERSION"
  exit 0
endif

set tmp=/tmp/tmp$$
set log=/tmp/nemo$$.bootlog


if (-d $nemo) then
  cd $nemo
else
  mkdir -p $nemo
  cd $nemo
endif
date;stamp; 
echo "### Working with nemo=$nemo"
echo "### Logfile maintained in log=$log"
goto $goto

#
# ----------------------------------------------------------------------
#
start:

if (! -e $file) then

if ($get == ftp) then

stamp;echo Running tar to pick up the tar file...
echo "(You may be asked for a passwd for the anonymous user)"

ftp -v $site << END_OF_FTP >> $log
anonymous
nemo@astro.umd.edu
bin
cd $dir
dir $file
get $file
quit
END_OF_FTP

else if ($get == wget) then
  wget ftp://$site/$dir/$file >>& $log
else
  echo Bad get=$get
  exit 1
endif

endif

stamp
ls -l $file

#
# ----------------------------------------------------------------------
#
tar:

if (! -e $file) then
  echo File $file does not exist in $cwd
  exit 1
endif

stamp
set e=$file:e
if ("$e" == "Z") then
  echo Using uncompress and tar ...
  uncompress $file | tar xf -
  set filer=$file:r ; set dirname=$filer:r
else if("$e" == "gz" || "$e" == "z") then
  echo Using gzip and tar ...
  gzip -dc $file | tar xf -
  set filer=$file:r ; set dirname=$filer:r
else if ("$e" == "tar") then
  echo Using tar ...
  tar xf $file
  set dirname=$file:r
else
  echo "Unknown extension of (compressed) tar file $file"
  exit 1
endif

cd $dirname
stamp
#
# ----------------------------------------------------------------------
#
install:

stamp
if (-e NEMORC) then
  echo Now installing NEMO:
else
  echo Cannot install NEMO, missing Makefile or NEMORC file
  exit 1
endif

# always get rid of unwanted pollution from an existing version
unsetenv NEMO NEMOBIN
# if (-e nemo_end) source nemo_end

# now start configuring and installing
echo Running configure, with options:  $config
./configure $config >> $log
source nemo_start
make dirs config_extra scripts >> $log
if (X$yapp != X) then
  if (-e $yapp) then
    echo Patching in PGPLOT in $NEMO/local/pgplot
    make config_clean
    rm NEMORC.local 
    src/scripts/pgplot.install file=$yapp >> $log
    ./configure --with-pgplot-prefix=$NEMOLIB --with-yapp=pgplot $config >> $log    
    make dirs config_extra scripts >> $log
  endif
endif
echo Adding in NEMORC.local 
source NEMORC.local
rehash
stamp
echo "Installing the libraries ..."
make libs

prog:

echo Installing a few sample programs:
stamp
foreach p (tsf hisf mkplummer mkcube hackcode1 snapscale snapprint snapplot perorb)
  echo -n Working on $p ...
  if ($p == hisf) then
    mknemo -c history hisf >>& $log
  else
    mknemo $p >>& $log
  endif
  if ($status == 0) then
    echo -n Compiling appears ok ...
    rehash
    $p help=h > /dev/null 
    if ($status == 0) then
       echo Running ok too.
    else
       echo Problem running.
    endif
  else
    echo Problems installing.
  endif
end
stamp

test:
  stamp; echo "Running a simple test (this will install a few programs)"
  echo Running a simple test: >>& $log
  rehash
  mkplummer out=$tmp.1 nbody=128  >>& $log
  tsf in=$tmp.1 >>& $log
  hisf in=$tmp.1 >>& $log
  hackcode1 in=$tmp.1 out=$tmp.2 tstop=1 >>& $log
  snapscale in=$tmp.2 out=$tmp.3 mscale=2.0 >>& $log
  rm -f $tmp.*
  stamp

suit:
  stamp; echo "Running the testsuite (this will install quite a few programs)"
  cd $NEMO/src/scripts
  time need -m `testsuite -s`                   >>& $log
  echo "Begin Missing testsuite executables: "  >>  $log
  time testsuite -q                             >>& $log
  echo "End   Missing testsuite executables: "  >>  $log
  stamp
  $NEMO/src/scripts/testsuite                   >>& $log
  stamp

end:
  echo "If you haven't done so, issue the following command:"
  echo "        source nemo_start"
  echo "to load NEMO into your C-shell."
  echo "To make it permanent, add this alias to your .cshrc file:"
  echo ""
  echo "  alias nemo source $nemo/nemo_start"
  echo ""
  echo 'Please register your usage by email:  nemo@astro.umd.edu'
  echo 'and let us know if you do/do not wish to be informed of updates'
  echo ""
  echo "Logfile in: $log"
